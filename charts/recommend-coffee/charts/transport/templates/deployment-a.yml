apiVersion: apps/v1
kind: Deployment
metadata:
  name: transport-a
  labels:
    app: transport
    version: {{ .Chart.Version }}
    company: amazing-transport
spec:
  selector:
    matchLabels:
      app: transport
      version: {{ .Chart.Version }}
      company: amazing-transport
  template:
    metadata:
      labels:
        app: transport
        version: {{ .Chart.Version }}
        company: amazing-transport
      annotations:
        dapr.io/app-id: "transport"
        dapr.io/app-port: "80"
        dapr.io/enabled: "true"
        sidecar.opentelemetry.io/inject: "true"
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: transport
      containers:
        - name: transport
          image: "{{ .Values.global.containerRegistry }}/transport:{{ .Values.global.releaseVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: TELEMETRY__LOGGINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: transport-telemetry-config
                  key: "telemetry.loggingEndpoint"
            - name: TELEMETRY__TRACINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: transport-telemetry-config
                  key: "telemetry.tracingEndpoint"
            - name: TELEMETRY__NAME
              value: "trashy-transport.default"
            - name: TELEMETRY__VERSION
              valueFrom:
                configMapKeyRef:
                  name: transport-telemetry-config
                  key: "telemetry.version"
            - name: SERVICELEVELS__ShipmentSortingLossChance
              value: "0.05"
            - name: SERVICELEVELS__ShipmentDeliveryDelayChance
              value: "0.01"
            - name: SERVICELEVELS__CustomerNotHomeChance
              value: "0.01"
            - name: SERVICELEVELS__MaxDeliveryAttempts
              value: "3"
          ports:
            - containerPort: 80
              name: http
            - containerPort: 8888
              name: http-metrics
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
