apiVersion: apps/v1
kind: Deployment
metadata:
  name: payments
  labels:
    app: payments
    service: payments
    version: v1
spec:
  selector:
    matchLabels:
      app: payments
      service: payments
      version: v1
  template:
    metadata:
      labels:
        app: payments
        service: payments
        version: v1
      annotations:
        dapr.io/app-id: "payments"
        dapr.io/app-port: "80"
        dapr.io/enabled: "true"
        sidecar.opentelemetry.io/inject: "true"
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: payments
      containers:
        - name: payments
          image: "{{ .Values.global.containerRegistry }}/payments:{{ .Values.global.releaseVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: CONNECTIONSTRINGS__DEFAULTDATABASE
              valueFrom:
                secretKeyRef:
                  key: paymentsConnectionString
                  name: recommend-coffee-secrets
            - name: TELEMETRY__LOGGINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: customermanagement-config
                  key: "telemetry.loggingEndpoint"
            - name: TELEMETRY__TRACINGENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: customermanagement-config
                  key: "telemetry.tracingEndpoint"
            - name: TELEMETRY__NAME
              valueFrom:
                configMapKeyRef:
                  name: payments-config
                  key: "telemetry.name"
            - name: TELEMETRY__VERSION
              valueFrom:
                configMapKeyRef:
                  name: payments-config
                  key: "telemetry.version"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
      initContainers:
        - name: database-migrations
          image: "{{ .Values.global.containerRegistry }}/payments-migrations:{{ .Values.global.releaseVersion }}"
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: recommend-coffee-secrets
                  key: databasePassword
            - name: DB_USER
              value: sa
            - name: DB_NAME
              value: payments
            - name: DB_SERVER
              value: database
