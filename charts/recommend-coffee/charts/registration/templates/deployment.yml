apiVersion: apps/v1
kind: Deployment
metadata:
  name: registration
  labels:
    app: registration
    version: {{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      app: registration
      version: {{ .Chart.Version }}
  template:
    metadata:
      labels:
        app: registration
        version: {{ .Chart.Version }}
      annotations:
        dapr.io/app-id: "registration"
        dapr.io/app-port: "80"
        dapr.io/enabled: "true"
        sidecar.opentelemetry.io/inject: "true"
        prometheus.io/port: "80"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: registration
      containers:
        - name: registration
          image: "{{ .Values.global.containerRegistry }}/registration:{{ .Values.global.releaseVersion }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: IMAGE_TAG
              value: "{{ .Chart.Version }}"
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: TELEMETRY__ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: registration-config
                  key: "telemetry.endpoint"
            - name: TELEMETRY__NAME
              valueFrom:
                configMapKeyRef:
                  name: registration-config
                  key: "telemetry.name"
            - name: TELEMETRY__VERSION
              valueFrom:
                configMapKeyRef:
                  name: registration-config
                  key: "telemetry.version"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 80
            initialDelaySeconds: 3
            periodSeconds: 3
